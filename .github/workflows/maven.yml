# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

env:
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  REGION: ${{ secrets.REGION }}
  ENDPOINT: ${{ secrets.ENDPOINT }}
  JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker build -t teamder:latest .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker tag teamder:latest $DOCKER_USERNAME/teamder:latest
          docker push $DOCKER_USERNAME/teamder:latest
